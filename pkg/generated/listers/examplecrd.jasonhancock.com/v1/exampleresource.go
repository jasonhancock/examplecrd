// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/jasonhancock/examplecrd/pkg/apis/examplecrd.jasonhancock.com/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExampleResourceLister helps list ExampleResources.
// All objects returned here must be treated as read-only.
type ExampleResourceLister interface {
	// List lists all ExampleResources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ExampleResource, err error)
	// ExampleResources returns an object that can list and get ExampleResources.
	ExampleResources(namespace string) ExampleResourceNamespaceLister
	ExampleResourceListerExpansion
}

// exampleResourceLister implements the ExampleResourceLister interface.
type exampleResourceLister struct {
	indexer cache.Indexer
}

// NewExampleResourceLister returns a new ExampleResourceLister.
func NewExampleResourceLister(indexer cache.Indexer) ExampleResourceLister {
	return &exampleResourceLister{indexer: indexer}
}

// List lists all ExampleResources in the indexer.
func (s *exampleResourceLister) List(selector labels.Selector) (ret []*v1.ExampleResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ExampleResource))
	})
	return ret, err
}

// ExampleResources returns an object that can list and get ExampleResources.
func (s *exampleResourceLister) ExampleResources(namespace string) ExampleResourceNamespaceLister {
	return exampleResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExampleResourceNamespaceLister helps list and get ExampleResources.
// All objects returned here must be treated as read-only.
type ExampleResourceNamespaceLister interface {
	// List lists all ExampleResources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ExampleResource, err error)
	// Get retrieves the ExampleResource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ExampleResource, error)
	ExampleResourceNamespaceListerExpansion
}

// exampleResourceNamespaceLister implements the ExampleResourceNamespaceLister
// interface.
type exampleResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExampleResources in the indexer for a given namespace.
func (s exampleResourceNamespaceLister) List(selector labels.Selector) (ret []*v1.ExampleResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ExampleResource))
	})
	return ret, err
}

// Get retrieves the ExampleResource from the indexer for a given namespace and name.
func (s exampleResourceNamespaceLister) Get(name string) (*v1.ExampleResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("exampleresource"), name)
	}
	return obj.(*v1.ExampleResource), nil
}
